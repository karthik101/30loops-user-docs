================
Quickstart guide
================

.. note::

    This guide is still a work in progress. Examples my differ from the actual
    client output.


This guide will provide some basic information about the platform and walk you 
through the following steps:

#) Basics of the platform 
#) Installing the 30loops client
#) Creating an application
#) Deploying an application

30loops basics
==============

An application on 30loops consists of the following components:

- A repository resource
- An app resource
- An environment

In this quickstart, we will create the application with a default environment
and a single repository. You can create multiple environments per application,
for example a staging, development and production environment. You can also
create separate repository resources that you can connect to an application. We
will go more indepth in the next chapters.

Applications on 30loops are deployed using a pull mechanism. This means,
30loops will connect to your code repository, fetch the code, and deploy it on
the platform. 

To use the client, you need to have a valid, active account.

.. note::

    The quickstart guide assumes that you use the ``thirty`` client command for
    all operations. Of course, you can also create the necessary JSON messages 
    by hand or have them generated by some tool.

Installing the 30loops client
=============================

Communicating with the 30loops platform can be done using the documented REST
api, or using the 30loops client, called thirty. The REST api is documented
::doc:`here <rest_api>`, in this quickstart we will focus on using the client. 
You can install the client using pip::

    pip install thirty-cli

If pip is not available on your system, you need to install it. On any Debian
based system, you can run::

    apt-get install python-pip

Creating an application
=======================

Create an app with the following command::

    thirty create app <appname> <repository>

Replace appname with the desired name for your application, and repository with
the URL to your code repository. At the moment only Git repositories are
supported. Every command has its own help function::

    thirty help create app

This will show help for the ``create app`` subcommand. In this quickstart we
will deploy a Django CMS. So our command looks like::

    thirty create app djangocms git://github.com/bastichelaar/Django-CMS-30loops.git --flavor django

This will automatically create an app named ``djangocms``, an environment (by 
default named ``production``) and a repository named ``djangocms``. Note the 
``--flavor`` option, this is required. Currently we support two flavors:
``django`` and ``wsgi``.


To see the configuration of the newly created app, use the following command::

    thirty show app djangocms

It will output something like:

.. code-block:: bash 

    name: production
        flavor: django
        requirements_file: requirements.txt
        project_root: path
        repo_branch: master
        install_setup_py: False
        repo_commit: HEAD
    database
        name: 30loops-app-djangocms-production
        variant: postgresql
        label: database
        username: 30loops-app-djangocms-production
        host: 192.168.0.53
        password: M2MyNDFmZjg1
        port: 9999
    djangoflavor
        inject_db: True
        django_settings_module: settings
    backends
        count: 1
        region: eu1

The app resource is now created. If you want to change one of the options, use 
the ``thirty update`` command. Note that most of the options are part of the
environment, and not of the app resource itself.

We will continue with deploying the newly created application.

Deploying an application
========================

Deploying an application is quite simple and fast, just run the following
command::

    thirty deploy djangocms

This will start the deployment. The client starts polling the logbook 
immediately. You can also access the logbook manually by running::

    thirty logbook UUID

Where UUID is the ID of the deployment task.

After a successfull deploy, your application will be available on the specified
DNS name and on 30loops.net, for example
``http://30loops-app-djangocms-production.30loops.net``.

Guides
======

We created a few guides with some sample applications. This will be extended in
the future with more samples.

Django
------
- :doc:`Django CMS <django>`

WSGI
----
- :doc:`Simple WSGI app <wsgi>`


Additional support
==================

If you have any questions, please log in on http://help.30loops.net and
submit a ticket. You can also chat with us on #30loops at irc.freenode.net or
mail us at support@30loops.net.

.. _`pip website`: http://www.pip-installer.org/en/latest/requirements.html
